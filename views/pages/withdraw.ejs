<%- include('partials/header.ejs') %>

    <body class="relative" style="background-color: #252525;">
        <!-- Nav Section -->
        <%- include('partials/dashnav.ejs') %>

            <div class=" overflow-x-hidden grid grid-cols-4">
                <!-- SideBar -->
                <%- include('partials/dashside.ejs') %>

                    <!-- Main Section -->
                    <section class="col-span-4 md:col-span-3 mt-16">
                        <script>

                            function getReferralls(){
                                    
                                $.ajax({
                                    type: "GET",
                                    url: `${url}/user/referrals?username=${user.username}`,
                                    // headers: { 'custom-header': 'some value' },
                                    dataType: "json",

                                    //if received a response from the server
                                    success: function(data) {
                                            // Main Logic for all referall data
                                            console.log(data);

                                            window.localStorage.setItem("ref", JSON.stringify(data))
                                    },

                                    //If there was no resonse from the server
                                    error: function(data){
                                    // Main Logic for all referall data
                                    console.log(data);
                                    },

                                }); //end of ajax call
            
                            }
                            
                            getReferralls()
                            
                        </script>
                        <div class="mt-10 m-5 min-h-screen">
                            <script>
                                const refs = JSON.parse(localStorage.getItem('ref'));
                            </script>
                            <h1 class="ultra text-4xl text-green-500 text-center mt-12">Withdraw Funds</h1>
                            <p class="text-green-200 text-center mt-2 italic max-w-[800px] mx-auto"><b>NOTICE:</b> You can not withdraw from your trading balance until one month after registration However you can withdraw from your referral balance even if you have only NGN 1,000 and you should get your referral bonus in the bank account you provided at least 6 hours after you place withdrawal</p>
                            <div class="mb-5">
                                <div class="flex items-center justify-center flex-col my-10 gap-5">
                                    <div class="border border-gray-800 rounded-md lightDark p-7 shadow-md shadow-gray-700 w-full max-w-[800px] mx-auto">
                                        <div class="flex items-center justify-between gap-10">
                                            <div class="space-y-2">
                                                <p class="text-gray-200 font-bold text-xl">Referral Balance</p>
                                                <p class="ultra text-2xl text-gray-400 refBalance">
                                                    <script>
                                                        const refBalance = document.querySelector('.refBalance')

                                                        refBalance.innerHTML = "NGN " + ((refs.verifiedReferred * 1000) - user.amountWithdrawn)?.toLocaleString();
                                                    </script>
                                                </p>
                                            </div>
                                            <div class="purpleGrad w-10 h-10 opacity-50"></div>
                                        </div>
                                        <button class="withdrwBtn greenBtn shadow-md shadow-green-700 p-4 rounded-md px-10 font-bold text-lg tracking-wide my-5 w-full mx-auto text-center max-w-[600px] mt-10 cursor-pointer animate-pulse hidden">
                                        </button>
                                        <p class="pendingBtn bg-gray-900 p-4 rounded-md px-10 font-bold text-sm tracking-wide my-5 w-full mx-auto text-center max-w-[600px] mt-10 cursor-pointer animate-pulse hidden">PENDING...</p>
                                        <p class="referrBtn greenBtn shadow-md shadow-green-700 p-4 rounded-md px-10 font-bold text-sm tracking-wide my-5 w-full mx-auto text-center max-w-[600px] mt-10 cursor-pointer animate-pulse hidden">Start Referring your friends and earn #1,000 on each referral</p>
                                        <script>

                                            const withdrwBtn = document.querySelector('.withdrwBtn');
                                            if (user.withdraw) {
                                                // withdrwBtn.classList.add("hidden")
                                                withdrwBtn.disabled = true;
                                                withdrwBtn.innerHTML = "Withdrawal Pending";
                                                // document.querySelector('.pendingBtn').classList.remove('hidden');
                                                withdrawBtn.classList.remove('greenBtn');
                                                withdrawBtn.classList.add('bg-yellow-500');
                                            } else {
                                                withdrwBtn.innerHTML = "Place withdrawal"

                                            }
                                        </script>
                                    </div>
                                    <div class="border border-gray-800 rounded-md lightDark p-7 shadow-md shadow-gray-700 w-full max-w-[800px] mx-auto">
                                        <div class="flex items-center justify-between gap-10">
                                            <div class="space-y-2">
                                                <p class="text-gray-200 font-bold text-xl">Trading Balance </p>
                                                <p class="ultra text-2xl text-gray-400 mineBalance"></p>
                                            </div>
                                            <div class="purpleGrad w-10 h-10 opacity-50"></div>
                                        </div>
                                        <p class="bg-gray-800 shadow-md shadow-green-700 p-4 rounded-md px-10 font-bold text-sm tracking-wide my-5 w-full mx-auto text-center max-w-[600px] mt-10 cursor-pointer animate-pulse tradeWithdraw">You can only withdraw your trading balance after one month of registration</p>
                                        <button class="hidden bg-gray-800 shadow-md shadow-green-700 p-4 rounded-md px-10 font-bold text-lg tracking-wide my-5 w-full mx-auto text-center max-w-[600px] mt-10 cursor-pointer animate-pulse placeTradeWith">Place withdrawal</button>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <!-- Footer -->
                        <footer class="flex items-center justify-between w-full bg-black bg-opacity-30 p-7">
                            <p class="text-gray-200 text-sm">2022 &copy NairaCity</p>
                            <p class="text-gray-200 text-sm">Designed & Developed by NairaCity Technologies Ltd</p>
                        </footer>
                    </section>
            </div>

            <!-- Javascript codes and links -->

            <script src="/public/js/dashboard.js"></script>
            <script>

                const referrBtn = document.querySelector('.referrBtn');
                const tradeWithdraw = document.querySelector('.tradeWithdraw');
                const placeTradeWith = document.querySelector('.placeTradeWith');

                // if(user.lastMinedAmout >= 2000){
                //     tradeWithdraw.classList.add('hidden'); 
                //     placeTradeWith.classList.remove('hidden');
                // } 

                // "NGN " + ( (refs.length * 1000) - user.amountWithdrawn ).toLocaleString();                
                const mineBalance = document.querySelector('.mineBalance')

                let totalTradedBalance;

                if (((new Date().getTime() - user.lastMinedDate) / (1000 * 60 * 60 * 24)) < 1) {

                        switch (user.package) {

                            case "special":
                                mineBalance.innerHTML = "NGN " + (user.lastMinedAmout - 500)?.toLocaleString();
                                totalTradedBalance = user.lastMinedAmout - 500;
                                break;

                            case "premium":
                                mineBalance.innerHTML = "NGN " + (user.lastMinedAmout - 1000)?.toLocaleString();
                                totalTradedBalance = user.lastMinedAmout - 1000;
                                break;

                            case "pro":
                                mineBalance.innerHTML = "NGN " + (user.lastMinedAmout - 2000)?.toLocaleString();
                                totalTradedBalance = user.lastMinedAmout - 2000;
                                break;

                            case "lite": {
                                mineBalance.innerHTML = "NGN " + (user.lastMinedAmout - 5000)?.toLocaleString();
                                totalTradedBalance = user.lastMinedAmout - 5000;
                            }
                                break;

                            case "xlite":
                                mineBalance.innerHTML = "NGN " + (user.lastMinedAmout - 10000)?.toLocaleString();
                                totalTradedBalance = user.lastMinedAmout - 10000;
                                break;

                            default:
                                mineBalance.innerHTML = "NGN " + (user.lastMinedAmout - 200)?.toLocaleString();
                                totalTradedBalance = user.lastMinedAmout - 200;
                                break;
                        }

                } else {
                        mineBalance.innerHTML = "NGN " + (user.lastMinedAmout)?.toLocaleString();
                        totalTradedBalance = user.lastMinedAmout;
                    }

                
                


                if(user.withTraded){
                    placeTradeWith.innerHTML = "PENDING...";
                    placeTradeWith.disabled = true;
                } else {
                    placeTradeWith.innerHTML = "Place withdrawal"

                }

                if((refs.verifiedReferred * 1000) - user.amountWithdrawn == 0){
                    referrBtn.classList.remove("hidden")
                    withdrwBtn.classList.add("hidden")
                } else {
                    referrBtn.classList.add("hidden")
                    withdrwBtn.classList.remove("hidden")
                }

                const withdrawTraded = async () => {

                        const newUser = {
                            withTraded: totalTradedBalance
                        }

                        fetch(`${url}/user/update/${user._id}`, {
                            method: "PUT",
                            body: JSON.stringify(newUser),
                            headers: {
                                "Content-type": "application/json; charset=UTF-8",
                                token: `Bearer ${user?.token}`
                            },
                        })
                            .then(function (response) {
                                if (response.ok) {
                                    return response.json();
                                } else {
                                    return response.text().then((text) => {
                                        return Promise.reject()
                                    });
                                }
                                return Promise.reject(response);
                            })
                            .then(function (data) {

                                console.log(data);
                                const  { withTraded, ...others } = user
                                const updatedUser = {...others, ...newUser}
                                localStorage.setItem("user", JSON.stringify(updatedUser))

                                window.location.reload()

                            })
                            .catch(function (error) {
                                console.log(error)
                            })
                    }
                    
                placeTradeWith.addEventListener("click", withdrawTraded)  

                const placeWithdraw = async () => {

                    if(!user.accountNumber){
                        window.location.href = "/account"
                        return;
                    }

                        const newUser = {
                            withdraw: ( (refs.verifiedReferred * 1000) - user.amountWithdrawn )
                        }
                        console.log(( (refs.verifiedReferred * 1000) - user.amountWithdrawn ))
                        console.log(newUser)

                        $.ajax({
                            type: "PUT",
                            url: `${url}/user/update/${user._id}`,
                            headers: {
                                "Content-type": "application/json; charset=UTF-8",
                            },
                            data: JSON.stringify(newUser),
                            dataType: "json",

                            //if received a response from the server
                            success: function(data) {
                                    // Main Logic for all referall data
                                console.log(data);
                                const  { withdraw, ...others } = user
                                const updatedUser = {...others, ...newUser}
                                localStorage.setItem("user", JSON.stringify(updatedUser))
                                window.location.reload()
                            },

                            //If there was no resonse from the server
                            error: function(data){
                                // Main Logic for all referall data
                                console.log(data);
                            },
                        }); //end of ajax call

                        // fetch(`${url}/user/update/${user._id}`, {
                        //     method: "PUT",
                        //     body: JSON.stringify(newUser),
                        //     headers: {
                        //         "Content-type": "application/json; charset=UTF-8",
                        //         token: `Bearer ${user?.token}`
                        //     },
                        // })
                        //     .then(function (response) {
                        //         if (response.ok) {
                        //             return response.json();
                        //         } else {
                        //             return response.text().then((text) => {
                        //                 return Promise.reject()
                        //             });
                        //         }
                        //         return Promise.reject(response);
                        //     })
                        //     .then(function (data) {

                        //         console.log(data);
                        //         const  { withdraw, ...others } = user
                        //         const updatedUser = {...others, ...newUser}
                        //         localStorage.setItem("user", JSON.stringify(updatedUser))

                        //         window.location.reload()

                        //     })
                        //     .catch(function (error) {
                        //         console.log(error)
                        //     })
                    }
                    
                 withdrwBtn.addEventListener("click", placeWithdraw)  

            </script>
        
    </body>

    </html>